/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AddressCreateNestedManyWithoutCompaniesInput } from "./AddressCreateNestedManyWithoutCompaniesInput";
import { ValidateNested, IsOptional, IsString } from "class-validator";
import { Type } from "class-transformer";
import { ContactCreateNestedManyWithoutCompaniesInput } from "./ContactCreateNestedManyWithoutCompaniesInput";
import { DeviceCreateNestedManyWithoutCompaniesInput } from "./DeviceCreateNestedManyWithoutCompaniesInput";
import { UserCreateNestedManyWithoutCompaniesInput } from "./UserCreateNestedManyWithoutCompaniesInput";
@InputType()
class CompanyCreateInput {
  @ApiProperty({
    required: false,
    type: () => AddressCreateNestedManyWithoutCompaniesInput,
  })
  @ValidateNested()
  @Type(() => AddressCreateNestedManyWithoutCompaniesInput)
  @IsOptional()
  @Field(() => AddressCreateNestedManyWithoutCompaniesInput, {
    nullable: true,
  })
  addresses?: AddressCreateNestedManyWithoutCompaniesInput;

  @ApiProperty({
    required: false,
    type: () => ContactCreateNestedManyWithoutCompaniesInput,
  })
  @ValidateNested()
  @Type(() => ContactCreateNestedManyWithoutCompaniesInput)
  @IsOptional()
  @Field(() => ContactCreateNestedManyWithoutCompaniesInput, {
    nullable: true,
  })
  contacts?: ContactCreateNestedManyWithoutCompaniesInput;

  @ApiProperty({
    required: false,
    type: () => DeviceCreateNestedManyWithoutCompaniesInput,
  })
  @ValidateNested()
  @Type(() => DeviceCreateNestedManyWithoutCompaniesInput)
  @IsOptional()
  @Field(() => DeviceCreateNestedManyWithoutCompaniesInput, {
    nullable: true,
  })
  devices?: DeviceCreateNestedManyWithoutCompaniesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  document?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  logo?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => UserCreateNestedManyWithoutCompaniesInput,
  })
  @ValidateNested()
  @Type(() => UserCreateNestedManyWithoutCompaniesInput)
  @IsOptional()
  @Field(() => UserCreateNestedManyWithoutCompaniesInput, {
    nullable: true,
  })
  users?: UserCreateNestedManyWithoutCompaniesInput;
}
export { CompanyCreateInput };
